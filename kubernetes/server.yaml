---
# Source: server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: server
  labels:
    app.kubernetes.io/name: server
    app.kubernetes.io/instance: server
    app.kubernetes.io/version: "1.16.0"
---
# Source: server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: server
  labels:
    app.kubernetes.io/name: server
    app.kubernetes.io/instance: server
    app.kubernetes.io/version: "1.16.0"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: server
    app.kubernetes.io/instance: server
---
# Source: server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  labels:
    app.kubernetes.io/name: server
    app.kubernetes.io/instance: server
    app.kubernetes.io/version: "1.16.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: server
      app.kubernetes.io/instance: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: server
        app.kubernetes.io/instance: server
    spec:
      serviceAccountName: server
      securityContext: {}
      containers:
        - name: server
          securityContext: {}
          image: "ghcr.io/padok-team/tracing-exercise:server"
          imagePullPolicy: IfNotPresent
          env:
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "otel-collector:4317"
          ports:
            - name: http
              containerPort: 7080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /hello
              port: http
          readinessProbe:
            httpGet:
              path: /hello
              port: http
          resources: {}
